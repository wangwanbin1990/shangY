<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.sy.func.account.mapper.CashRecordMapper">
	
	<!-- 返回的结果集 -->
	<resultMap type="com.sy.func.account.entity.CashRecordVo" id="cashRecordResultMap">
		<id property="id" column="id" />
		<result property="userId" 					column="USER_ID" />
		<result property="status" 					column="STATUS" />
		<result property="account" 					column="ACCOUNT" />
		<result property="bank" 					column="BANK" />
		<result property="branch" 					column="BRANCH"/>
		<result property="total"	    			column="TOTAL" />
		<result property="credited"  				column="CREDITED" />
		<result property="fee"	 					column="FEE" />
		<result property="verifyUserid" 			column="VERIFY_USERID" /> 
		<result property="verifyTime" 				column="VERIFY_TIME" />
		<result property="verifyRemark" 			column="VERIFY_REMARK" /> 
		<result property="verifyUserid2" 			column="VERIFY_USERID2" /> 
		<result property="verifyTime2" 				column="VERIFY_TIME2" />
		<result property="verifyRemark2" 			column="VERIFY_REMARK2" />
		<result property="verifyUserid3" 			column="VERIFY_USERID3" />
		<result property="verifyTime3" 			    column="VERIFY_TIME3" />
		<result property="verifyRemark3" 			column="VERIFY_REMARK3" />
		<result property="addtime" 					column="ADDTIME" />
		<result property="addip" 					column="ADDIP" /> 
		<result property="version" 				 	column="VERSION" />
	</resultMap>
 
	
	<!--基本列 -->
	<sql id="cashRecordBaseColumn">
		c.ID, 
		c.USER_ID, 
		c.STATUS, 
		c.ACCOUNT, 
		c.BANK, 
		c.BRANCH,
		c.TOTAL, 
		c.CREDITED, 
		c.FEE, 
		c.VERIFY_USERID, 
		c.VERIFY_TIME, 
		c.VERIFY_REMARK, 
		c.VERIFY_USERID2, 
		c.VERIFY_TIME2, 
		c.VERIFY_REMARK2,
		c.VERIFY_USERID3,
		c.VERIFY_TIME3,
		c.VERIFY_REMARK3,
		c.ADDTIME, 
		c.ADDIP,
		c.VERSION
	</sql>
	
	<!-- 封装查询条件 -->
	<sql id="cashRecord_Where_Clause">
		<if test="id != null">
			and c.id =#{id}
		</if>
		<if test="userId != null ">
			and c.USER_ID = #{userId}
		</if>	
		<if test="rechargeStatus != null ">
			and c.STATUS = #{rechargeStatus}
		</if>	
		<if test="beginTime != null">
			and c.ADDTIME <![CDATA[>=]]> UNIX_TIMESTAMP(#{beginTime})
		</if>
		<if test="endTime != null">
			and c.ADDTIME <![CDATA[<=]]> UNIX_TIMESTAMP(#{endTime})
		</if>
	</sql>
	
  	<!-- 根据条件查询记录集合 -->
	<select id="queryCashRecordList" parameterType="com.sy.func.account.entity.CashRecordCnd" resultMap="cashRecordResultMap" >
		select 	
		   <include refid="cashRecordBaseColumn"/>
		from
			t_cashrecord c
		where 1=1
		<include refid="cashRecord_Where_Clause"/>
		ORDER BY c.ADDTIME desc
		<if test="lockedRecordYn != null and lockedRecordYn == 'yes'">
			FOR UPDATE
		</if>	
  	</select>
  	
  	<!-- 根据条件查询记录数量-->
	<select id="queryCashRecordCount" parameterType="com.sy.func.account.entity.CashRecordCnd" resultType="java.lang.Integer" >
		select count(c.id)
		from
			t_cashrecord c
		where 1=1
		<include refid="cashRecord_Where_Clause"/>
  	</select>
  	
  	<!-- 根据查询条件统计提现总额 -->
  	<select id="queryCashRecordTotalByCnd" parameterType="com.sy.func.account.entity.CashRecordCnd" resultType="java.math.BigDecimal" >
		select 	
			ifnull(sum(c.TOTAL), 0)
		from
			t_cashrecord c
		where 1=1
		<include refid="cashRecord_Where_Clause"/>
  	</select>
  	
	<!-- 查询当天的提现次数-->
	<select id="getCashedCount" resultType="java.lang.Integer" >
		SELECT count(*) 当日提现次数
			FROM t_cashrecord r
				WHERE TO_DAYS(r.ADDTIME) = TO_DAYS(now())
					AND r.USER_ID = #{userId} 
  	</select>	
  	
  	<!-- 查询提现金额-->
	<select id="getCashedAccountTotal" resultType="java.math.BigDecimal" >
		SELECT IFNULL(SUM(C.${sumColumn}),0) 当天累计提现金额																	
			FROM t_cashrecord C 															
				WHERE 1=1															
					AND C.STATUS IN (0,1,2)
					AND C.USER_ID = #{userId} 
				<if test="today == true">
					AND TO_DAYS(C.ADDTIME) = TO_DAYS(CURDATE())
				</if>
  	</select>	
  	
  	<select id="findCashRecord" resultMap="cashRecordResultMap">
  		SELECT 
  		<include refid="cashRecordBaseColumn"/>
  		FROM t_cashrecord c WHERE c.USER_ID=#{userId}  order by c.ADDTIME desc
  	</select>
</mapper>  